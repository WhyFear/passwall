-- 订阅表
CREATE TABLE IF NOT EXISTS subscriptions
(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    url        TEXT      NOT NULL,
    content    TEXT      NOT NULL,
    type       TEXT      NOT NULL,
    status     INTEGER   NOT NULL DEFAULT -1,
    created_at TIMESTAMP NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP NOT NULL DEFAULT NOW()
);

-- 创建唯一索引
CREATE UNIQUE INDEX IF NOT EXISTS idx_subscriptions_url ON subscriptions (url);

-- 代理服务器表
CREATE TABLE IF NOT EXISTS proxies
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    subscription_id BIGINT,
    name             TEXT      NOT NULL,
    domain           TEXT      NOT NULL,
    port             INTEGER   NOT NULL CHECK (port >= 0 AND port <= 65535),
    password VARCHAR(255),
    type             TEXT      NOT NULL,
    config           TEXT      NOT NULL,
    ping             INTEGER            DEFAULT 0,
    download_speed   INTEGER            DEFAULT 0,
    upload_speed     INTEGER            DEFAULT 0,
    status           INTEGER   NOT NULL DEFAULT -1,
    pinned           BOOLEAN   NOT NULL DEFAULT FALSE,
    latest_test_time TIMESTAMP,
    created_at       TIMESTAMP NOT NULL DEFAULT NOW(),
    updated_at       TIMESTAMP NOT NULL DEFAULT NOW(),

    -- 外键约束
    CONSTRAINT fk_proxies_subscription FOREIGN KEY (subscription_id) REFERENCES subscriptions (id) ON DELETE SET NULL
);

-- 创建组合唯一索引
CREATE UNIQUE INDEX IF NOT EXISTS idx_domain_port_password ON proxies (domain, port, password);

-- 核心索引（基于前端查询模式的最小化索引）
CREATE INDEX IF NOT EXISTS idx_proxies_status ON proxies (status);
CREATE INDEX IF NOT EXISTS idx_proxies_type ON proxies (type);

-- 关键复合索引（覆盖90%前端查询场景）
CREATE INDEX IF NOT EXISTS idx_status_download ON proxies (status, download_speed DESC);
CREATE INDEX IF NOT EXISTS idx_status_ping ON proxies (status, ping DESC);

-- 测速历史记录表
CREATE TABLE IF NOT EXISTS speed_test_histories
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    proxy_id BIGINT NOT NULL,
    ping           INTEGER   NOT NULL DEFAULT 0,
    download_speed INTEGER   NOT NULL DEFAULT 0,
    upload_speed   INTEGER   NOT NULL DEFAULT 0,
    test_time      TIMESTAMP NOT NULL DEFAULT NOW(),
    created_at     TIMESTAMP NOT NULL DEFAULT NOW()
);

-- 创建索引
CREATE INDEX IF NOT EXISTS idx_proxy_id ON speed_test_histories (proxy_id);

-- 流量统计表
CREATE TABLE IF NOT EXISTS traffic_statistics
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    proxy_id       BIGINT    NOT NULL,
    download_total BIGINT    NOT NULL DEFAULT 0,
    upload_total   BIGINT    NOT NULL DEFAULT 0,
    created_at     TIMESTAMP NOT NULL DEFAULT NOW(),
    updated_at     TIMESTAMP NOT NULL DEFAULT NOW()
);

-- 创建唯一索引，确保每个代理只有一条流量统计记录
CREATE UNIQUE INDEX IF NOT EXISTS idx_traffic_proxy_id ON traffic_statistics (proxy_id);

-- IP质量检测相关表

-- IP地址表
CREATE TABLE IF NOT EXISTS ip_addresses
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ip         VARCHAR(45) NOT NULL UNIQUE,
    created_at TIMESTAMP   NOT NULL DEFAULT NOW(),
    updated_at TIMESTAMP   NOT NULL DEFAULT NOW()
);

-- 创建索引
CREATE UNIQUE INDEX IF NOT EXISTS idx_ip_addresses_ip ON ip_addresses (ip);

-- IP质量基础信息表
CREATE TABLE IF NOT EXISTS ip_qualities
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ip_id        BIGINT      NOT NULL,
    status       VARCHAR(20) NOT NULL DEFAULT 'unknown',
    country      VARCHAR(100),
    city         VARCHAR(100),
    isp          VARCHAR(255),
    asn          VARCHAR(50),
    organization VARCHAR(255),
    longitude    DECIMAL(10, 7),
    latitude     DECIMAL(10, 7),
    is_vpn       BOOLEAN     NOT NULL DEFAULT FALSE,
    is_proxy     BOOLEAN     NOT NULL DEFAULT FALSE,
    is_hosting   BOOLEAN     NOT NULL DEFAULT FALSE,
    is_tor       BOOLEAN     NOT NULL DEFAULT FALSE,
    last_test_at TIMESTAMP,
    created_at   TIMESTAMP   NOT NULL DEFAULT NOW(),
    updated_at   TIMESTAMP   NOT NULL DEFAULT NOW(),

    -- 外键约束
    CONSTRAINT fk_ip_qualities_ip_id FOREIGN KEY (ip_id) REFERENCES ip_addresses (id) ON DELETE CASCADE
);

-- 创建索引
CREATE INDEX IF NOT EXISTS idx_ip_qualities_ip_id ON ip_qualities (ip_id);
CREATE INDEX IF NOT EXISTS idx_ip_qualities_status ON ip_qualities (status);
CREATE INDEX IF NOT EXISTS idx_ip_qualities_country ON ip_qualities (country);
CREATE INDEX IF NOT EXISTS idx_ip_qualities_city ON ip_qualities (city);
CREATE INDEX IF NOT EXISTS idx_ip_qualities_asn ON ip_qualities (asn);
CREATE INDEX IF NOT EXISTS idx_ip_qualities_is_vpn ON ip_qualities (is_vpn);
CREATE INDEX IF NOT EXISTS idx_ip_qualities_is_proxy ON ip_qualities (is_proxy);
CREATE INDEX IF NOT EXISTS idx_ip_qualities_is_hosting ON ip_qualities (is_hosting);
CREATE INDEX IF NOT EXISTS idx_ip_qualities_is_tor ON ip_qualities (is_tor);

-- 风险评分表
CREATE TABLE IF NOT EXISTS risk_scores
(
    id               BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ip_quality_id    BIGINT        NOT NULL,
    provider         VARCHAR(50)   NOT NULL,
    overall_score    DECIMAL(5, 2) NOT NULL DEFAULT 0.0,
    fraud_score      DECIMAL(5, 2),
    spam_score       DECIMAL(5, 2),
    bot_score        DECIMAL(5, 2),
    vpn_proxy_score  DECIMAL(5, 2),
    risk_level       VARCHAR(20)   NOT NULL DEFAULT 'unknown',
    is_high_risk     BOOLEAN       NOT NULL DEFAULT FALSE,
    is_recent_abuse  BOOLEAN       NOT NULL DEFAULT FALSE,
    last_reported_at TIMESTAMP,
    last_test_at     TIMESTAMP,
    created_at       TIMESTAMP     NOT NULL DEFAULT NOW(),
    updated_at       TIMESTAMP     NOT NULL DEFAULT NOW(),

    -- 外键约束
    CONSTRAINT fk_risk_scores_ip_quality_id FOREIGN KEY (ip_quality_id) REFERENCES ip_qualities (id) ON DELETE CASCADE
);

-- 创建索引
CREATE INDEX IF NOT EXISTS idx_risk_scores_ip_quality_id ON risk_scores (ip_quality_id);
CREATE INDEX IF NOT EXISTS idx_risk_scores_provider ON risk_scores (provider);
CREATE INDEX IF NOT EXISTS idx_risk_scores_overall_score ON risk_scores (overall_score);
CREATE INDEX IF NOT EXISTS idx_risk_scores_risk_level ON risk_scores (risk_level);
CREATE INDEX IF NOT EXISTS idx_risk_scores_is_high_risk ON risk_scores (is_high_risk);

-- 服务解锁状态表
CREATE TABLE IF NOT EXISTS service_unlocks
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ip_quality_id BIGINT      NOT NULL,
    service_type  VARCHAR(20) NOT NULL,
    service_name  VARCHAR(50) NOT NULL,
    status        VARCHAR(20) NOT NULL DEFAULT 'unknown',
    region        VARCHAR(50),
    content_type  VARCHAR(50),
    details       TEXT,
    last_test_at  TIMESTAMP,
    created_at    TIMESTAMP   NOT NULL DEFAULT NOW(),
    updated_at    TIMESTAMP   NOT NULL DEFAULT NOW(),

    -- 外键约束
    CONSTRAINT fk_service_unlocks_ip_quality_id FOREIGN KEY (ip_quality_id) REFERENCES ip_qualities (id) ON DELETE CASCADE
);

-- 创建索引
CREATE INDEX IF NOT EXISTS idx_service_unlocks_ip_quality_id ON service_unlocks (ip_quality_id);
CREATE INDEX IF NOT EXISTS idx_service_unlocks_service_type ON service_unlocks (service_type);
CREATE INDEX IF NOT EXISTS idx_service_unlocks_service_name ON service_unlocks (service_name);
CREATE INDEX IF NOT EXISTS idx_service_unlocks_status ON service_unlocks (status);
CREATE INDEX IF NOT EXISTS idx_service_unlocks_region ON service_unlocks (region);

-- 代理IP质量关联表
CREATE TABLE IF NOT EXISTS proxy_ip_qualities
(
    id            BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    proxy_id      BIGINT    NOT NULL,
    ip_quality_id BIGINT    NOT NULL,
    created_at    TIMESTAMP NOT NULL DEFAULT NOW(),
    updated_at    TIMESTAMP NOT NULL DEFAULT NOW(),

    -- 外键约束
    CONSTRAINT fk_proxy_ip_qualities_proxy_id FOREIGN KEY (proxy_id) REFERENCES proxies (id) ON DELETE CASCADE,
    CONSTRAINT fk_proxy_ip_qualities_ip_quality_id FOREIGN KEY (ip_quality_id) REFERENCES ip_qualities (id) ON DELETE CASCADE
);

-- 创建索引和唯一约束
CREATE UNIQUE INDEX IF NOT EXISTS idx_proxy_ip_qualities_proxy_ip ON proxy_ip_qualities (proxy_id, ip_quality_id);
CREATE INDEX IF NOT EXISTS idx_proxy_ip_qualities_proxy_id ON proxy_ip_qualities (proxy_id);
CREATE INDEX IF NOT EXISTS idx_proxy_ip_qualities_ip_quality_id ON proxy_ip_qualities (ip_quality_id);

-- IP质量检测事件表
CREATE TABLE IF NOT EXISTS ip_quality_events
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    proxy_id   BIGINT      NOT NULL,
    event_type VARCHAR(50) NOT NULL,
    status     VARCHAR(20) NOT NULL,
    message    TEXT,
    created_at TIMESTAMP   NOT NULL DEFAULT NOW(),

    -- 外键约束
    CONSTRAINT fk_ip_quality_events_proxy_id FOREIGN KEY (proxy_id) REFERENCES proxies (id) ON DELETE CASCADE
);

-- 创建索引
CREATE INDEX IF NOT EXISTS idx_ip_quality_events_proxy_id ON ip_quality_events (proxy_id);
CREATE INDEX IF NOT EXISTS idx_ip_quality_events_event_type ON ip_quality_events (event_type);
CREATE INDEX IF NOT EXISTS idx_ip_quality_events_status ON ip_quality_events (status);
CREATE INDEX IF NOT EXISTS idx_ip_quality_events_created_at ON ip_quality_events (created_at);

-- IP质量摘要表
CREATE TABLE IF NOT EXISTS ip_quality_summaries
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ip_quality_id      BIGINT        NOT NULL UNIQUE,
    overall_score      DECIMAL(5, 2) NOT NULL DEFAULT 0.0,
    status             VARCHAR(20)   NOT NULL DEFAULT 'unknown',
    streaming_count    INTEGER       NOT NULL DEFAULT 0,
    streaming_unlocked INTEGER       NOT NULL DEFAULT 0,
    ai_count           INTEGER       NOT NULL DEFAULT 0,
    ai_unlocked        INTEGER       NOT NULL DEFAULT 0,
    last_test_at       TIMESTAMP,
    created_at         TIMESTAMP     NOT NULL DEFAULT NOW(),
    updated_at         TIMESTAMP     NOT NULL DEFAULT NOW(),

    -- 外键约束
    CONSTRAINT fk_ip_quality_summaries_ip_quality_id FOREIGN KEY (ip_quality_id) REFERENCES ip_qualities (id) ON DELETE CASCADE
);

-- 创建索引
CREATE UNIQUE INDEX IF NOT EXISTS idx_ip_quality_summaries_ip_quality_id ON ip_quality_summaries (ip_quality_id);
CREATE INDEX IF NOT EXISTS idx_ip_quality_summaries_overall_score ON ip_quality_summaries (overall_score);
CREATE INDEX IF NOT EXISTS idx_ip_quality_summaries_status ON ip_quality_summaries (status);