name: Docker Build

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*'
      - 'test*'
  workflow_dispatch:

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.docker_tags.outputs.tags }}
      image-amd64: ${{ steps.build.outputs.digest }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set Docker tags
        id: docker_tags
        run: |
          if [[ $GITHUB_REF == refs/tags/test ]]; then
            echo "tags=${{ secrets.DOCKERHUB_USERNAME }}/passwall:test" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "tags=${{ secrets.DOCKERHUB_USERNAME }}/passwall:$VERSION" >> $GITHUB_OUTPUT
          else
            echo "tags=${{ secrets.DOCKERHUB_USERNAME }}/passwall:amd64-latest" >> $GITHUB_OUTPUT
          fi

      - name: Build and push AMD64 image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.docker_tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-arm64:
    runs-on: ubuntu-24.04-arm
    outputs:
      tags: ${{ steps.docker_tags.outputs.tags }}
      image-arm64: ${{ steps.build.outputs.digest }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set Docker tags
        id: docker_tags
        run: |
          if [[ $GITHUB_REF == refs/tags/test ]]; then
            echo "tags=${{ secrets.DOCKERHUB_USERNAME }}/passwall:test" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "tags=${{ secrets.DOCKERHUB_USERNAME }}/passwall:$VERSION" >> $GITHUB_OUTPUT
          else
            echo "tags=${{ secrets.DOCKERHUB_USERNAME }}/passwall:arm64-latest" >> $GITHUB_OUTPUT
          fi

      - name: Build and push ARM64 image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: ${{ steps.docker_tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  manifest:
    runs-on: ubuntu-latest
    needs: [ build-amd64, build-arm64 ]
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create manifest for version tags
        if: startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/tags/test'
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          docker buildx imagetools create \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/passwall:$VERSION \
            ${{ needs.build-amd64.outputs.image-amd64 }} \
            ${{ needs.build-arm64.outputs.image-arm64 }}

      - name: Create manifest for latest
        if: github.ref == 'refs/heads/master'
        run: |
          docker buildx imagetools create \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/passwall:latest \
            ${{ needs.build-amd64.outputs.image-amd64 }} \
            ${{ needs.build-arm64.outputs.image-arm64 }}
